generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  avatar   String?

  Groups Groups[]
}

model Groups {
  id     String @id @default(uuid())
  name   String
  userId String

  user             Users              @relation(fields: [userId], references: [id])
  Exams            Exams[]
  GroupsHasMembers GroupsHasMembers[]
}

model Exams {
  id          String    @id @default(uuid())
  name        String
  description String?
  examDate    DateTime?
  template    String
  groupId     String

  group           Groups            @relation(fields: [groupId], references: [id])
  Answers         Answers[]
  MembersHasExams MembersHasExams[]
}

model Answers {
  id              String @id @default(uuid())
  template        String
  templatePicture String
  membersId       String
  examsId         String

  Members Members @relation(fields: [membersId], references: [id])
  Exams   Exams   @relation(fields: [examsId], references: [id])
}

model Members {
  id         String  @id @default(uuid())
  name       String
  externalId String?

  Answers          Answers[]
  GroupsHasMembers GroupsHasMembers[]
  MembersHasExams  MembersHasExams[]
}

model GroupsHasMembers {
  id       String @id @default(uuid())
  memberId String
  groupId  String

  Member Members @relation(fields: [memberId], references: [id])
  Group  Groups  @relation(fields: [groupId], references: [id])
}

model MembersHasExams {
  id       String @id @default(uuid())
  memberId String
  examsId  String

  Member Members @relation(fields: [memberId], references: [id])
  Exams  Exams   @relation(fields: [examsId], references: [id])
}
